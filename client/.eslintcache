[{"D:\\Projects\\react-bookshelf\\client\\src\\index.js":"1","D:\\Projects\\react-bookshelf\\client\\src\\routes.js":"2","D:\\Projects\\react-bookshelf\\client\\src\\reducers\\index.js":"3","D:\\Projects\\react-bookshelf\\client\\src\\reducers\\books_reducer.js":"4","D:\\Projects\\react-bookshelf\\client\\src\\reducers\\user_reducer.js":"5","D:\\Projects\\react-bookshelf\\client\\src\\components\\Home\\home.js":"6","D:\\Projects\\react-bookshelf\\client\\src\\components\\Header\\header.js":"7","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Layout\\layout.js":"8","D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenav.js":"9","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auxiliary\\auxiliary.js":"10","D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\backdrop.js":"11","D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenavItems.js":"12","D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenavItem.js":"13","D:\\Projects\\react-bookshelf\\client\\src\\containers\\home.js":"14","D:\\Projects\\react-bookshelf\\client\\src\\actions\\index.js":"15","D:\\Projects\\react-bookshelf\\client\\src\\widgetsUI\\book_item.js":"16","D:\\Projects\\react-bookshelf\\client\\src\\components\\Book\\book.js":"17","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\login.js":"18","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auth\\auth.js":"19","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\addBook.js":"20","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\editBook.js":"21","D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\userBook.js":"22","D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\userProfile.js":"23","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\register.js":"24","D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\logout.js":"25","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\signup.js":"26","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auxiliary\\helper.js":"27"},{"size":638,"mtime":1609384082704,"results":"28","hashOfConfig":"29"},{"size":1691,"mtime":1609631251260,"results":"30","hashOfConfig":"29"},{"size":239,"mtime":1609301324879,"results":"31","hashOfConfig":"29"},{"size":1132,"mtime":1609614014662,"results":"32","hashOfConfig":"29"},{"size":942,"mtime":1609612579745,"results":"33","hashOfConfig":"29"},{"size":236,"mtime":1609479956869,"results":"34","hashOfConfig":"29"},{"size":991,"mtime":1609367489290,"results":"35","hashOfConfig":"29"},{"size":292,"mtime":1609352689627,"results":"36","hashOfConfig":"29"},{"size":704,"mtime":1609463686244,"results":"37","hashOfConfig":"29"},{"size":59,"mtime":1609352630808,"results":"38","hashOfConfig":"29"},{"size":213,"mtime":1609355442244,"results":"39","hashOfConfig":"29"},{"size":2648,"mtime":1609552886885,"results":"40","hashOfConfig":"29"},{"size":428,"mtime":1609463685048,"results":"41","hashOfConfig":"29"},{"size":2030,"mtime":1609632378084,"results":"42","hashOfConfig":"29"},{"size":4244,"mtime":1609612411069,"results":"43","hashOfConfig":"29"},{"size":1253,"mtime":1609432330953,"results":"44","hashOfConfig":"29"},{"size":2361,"mtime":1609613526411,"results":"45","hashOfConfig":"29"},{"size":4404,"mtime":1609632276497,"results":"46","hashOfConfig":"29"},{"size":1728,"mtime":1609631600559,"results":"47","hashOfConfig":"29"},{"size":5731,"mtime":1609613892342,"results":"48","hashOfConfig":"29"},{"size":7947,"mtime":1609614014662,"results":"49","hashOfConfig":"29"},{"size":2102,"mtime":1609614812138,"results":"50","hashOfConfig":"29"},{"size":681,"mtime":1609552482391,"results":"51","hashOfConfig":"29"},{"size":6297,"mtime":1609617153907,"results":"52","hashOfConfig":"29"},{"size":473,"mtime":1609627515120,"results":"53","hashOfConfig":"29"},{"size":5051,"mtime":1609628520467,"results":"54","hashOfConfig":"29"},{"size":76,"mtime":1609536007661,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"15bw1vp",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Projects\\react-bookshelf\\client\\src\\index.js",[],["120","121"],"D:\\Projects\\react-bookshelf\\client\\src\\routes.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\reducers\\index.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\reducers\\books_reducer.js",["122"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case 'GET_BOOKS':\r\n            // ...state ==> previous state\r\n            return { ...state, list: action.payload }\r\n        case 'GET_BOOK_W_REVIEWER':\r\n            return { ...state, book: action.payload.book, reviewer: action.payload.reviewer };\r\n        case 'CLEAR_BOOK_W_REVIEWER':\r\n            return { ...state, book: action.payload.book, reviewer: action.payload.reviewer };\r\n        case 'ADD_BOOK':\r\n            return { ...state, newBook: action.payload };\r\n        case 'EDIT_BOOK':\r\n            return { ...state, editBook: action.payload };\r\n        case 'UPDATE_BOOK':\r\n            return { ...state, updatedBook: action.payload };\r\n        case 'DELETE_BOOK':\r\n            return { ...state, deletedBook: action.payload };\r\n        // case 'CLEAR_BOOK':\r\n        //     return { ...state, updatedBook: null, deletedBook: null, editBook: null };\r\n        case 'CLEAR_STATE':\r\n            return { ...state, newBook: null, editBook: null, updatedBook: null, deletedBook: null }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\react-bookshelf\\client\\src\\reducers\\user_reducer.js",["123"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return { ...state, login: action.payload }\r\n        case 'USER_AUTH':\r\n            return { ...state, auth: action.payload }\r\n        case 'GET_USER_POSTS':\r\n            return { ...state, userPosts: action.payload }\r\n        case 'GET_USERS':\r\n            return { ...state, users: action.payload }\r\n        case 'USER_REGISTER':\r\n            return { ...state, register: { success: action.payload.success, message: action.payload.message }, users: action.payload.users, }\r\n        case 'USER_SIGNUP':\r\n            return { ...state, signup: action.payload }\r\n        // case 'CLEAR_STATE_LoginSignup':\r\n        //     return { ...state, login: null, signup: null }\r\n        case 'CLEAR_STATE':\r\n            return { ...state, login: null, signup: null, register: null }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Projects\\react-bookshelf\\client\\src\\components\\Home\\home.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Header\\header.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Layout\\layout.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenav.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auxiliary\\auxiliary.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\backdrop.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenavItems.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Sidenav\\sidenavItem.js",[],["124","125"],"D:\\Projects\\react-bookshelf\\client\\src\\containers\\home.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\actions\\index.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\widgetsUI\\book_item.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Book\\book.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\login.js",["126"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { loginUser, clearState } from '../../actions';\r\nimport { isEmpty } from '../../hoc/Auxiliary/helper';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        seccess: false,\r\n        loading: true\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ loading: false });\r\n        }, 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearState());\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(loginUser(this.state.email, this.state.password));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('componentWillReceiveProps=========>');\r\n        console.log(nextProps);\r\n        if (nextProps.login && nextProps.login.success) {\r\n            setTimeout(() => {\r\n                this.props.history.push('/');\r\n            }, 2000);\r\n        }\r\n    }\r\n    render() {\r\n        const user = this.props.login;\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <Skeleton style={{ marginTop: 10 }} height={350} count={1} />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"form_box\">\r\n                    <form noValidate={true} onSubmit={this.submitForm} className=\"submitform\">\r\n                        <h2>Login</h2>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleInputEmail}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleInputPassword}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            <button type=\"submit\">Login</button>\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            If you don't have any account!\r\n                            <Link className=\"link link_signup\" to=\"/signup/\">click here to signup.</Link>\r\n                        </div>\r\n                        {\r\n                            this.props.login && !isEmpty(this.props.login) ?\r\n                                <div className={`user_msg ${this.props.login.success ? 'show success' : 'show danger'}`}>\r\n                                    {\r\n                                        this.props.login.success ?\r\n                                            (\r\n                                                <div>\r\n                                                    <div>You Logged in successfully.</div>\r\n                                                    <div>\r\n                                                        It is redirecting to home page...\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            : <div>{this.props.login.message}</div>\r\n                                    }\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    console.log(state);\r\n    return { ...state.userReducer }\r\n}\r\nexport default connect(mapStateToProps)(Login);","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auth\\auth.js",["127","128"],"import React, { Component } from 'react'\r\nimport { auth } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nexport default function isAuth(ComposedClass, reload) {\r\n    class AuthenticationCheck extends Component {\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.props.dispatch(auth());\r\n            this.setState({ loading: false });\r\n        }\r\n\r\n        // componentWillReceiveProps(nextProps) {\r\n        //     console.log(nextProps);\r\n        //     this.setState({ loading: false })\r\n        // }\r\n\r\n        componentWillReceiveProps(nextProps) {\r\n\r\n            console.log('componentWillReceiveProps in AUTH========>');\r\n            console.log(nextProps);\r\n            if (nextProps.auth && !nextProps.auth.isAuth) {\r\n                this.props.history.push('/login/');\r\n                return;\r\n            }\r\n            // } else {\r\n            //     if (reload === false) {\r\n            //         this.props.history.push('/user/');\r\n            //     }\r\n            // }\r\n        }\r\n\r\n      \r\n        // static getDerivedStateFromProps(props, state) {\r\n        //     console.log(props);\r\n        //     console.log(state);\r\n        //     return props;\r\n        // }\r\n\r\n        render() {\r\n            if (this.state.loading) {\r\n                return (\r\n                    null\r\n                )\r\n            }\r\n            return (<ComposedClass {...this.props} user={this.props.auth} />)\r\n        }\r\n    }\r\n\r\n\r\n    function mapStateToProps(state) {\r\n        return { ...state.userReducer }\r\n    }\r\n\r\n\r\n\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n}","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\addBook.js",["129"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addBook, clearState } from '../../actions';\r\nimport { isEmpty } from '../../hoc/Auxiliary/helper';\r\n\r\nclass AddBook extends Component {\r\n\r\n    state = {\r\n        formdata: {\r\n            name: '',\r\n            author: '',\r\n            review: '',\r\n            pages: '',\r\n            rating: '1',\r\n            price: ''\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.dispatch(clearState());\r\n    }\r\n\r\n    handleInput = (event, name) => {\r\n        const newFormData = { ...this.state.formdata };\r\n        newFormData[name] = event.target.value;\r\n        this.setState({\r\n            formdata: newFormData\r\n        })\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.formdata);\r\n        this.props.dispatch(addBook({\r\n            ...this.state.formdata,\r\n            ownerId: this.props.auth.id\r\n        }));\r\n    }\r\n\r\n    showNewBook = (bookId) => (\r\n        <Link className=\"link\" to={`/books/${bookId}`}>\r\n            Click here to see the book information...\r\n        </Link>\r\n\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"form_box\">\r\n                    <form noValidate={true} onSubmit={this.submitForm} className=\"submitform\">\r\n                        <h2>Add Review</h2>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter name\"\r\n                                value={this.state.formdata.name}\r\n                                onChange={(event) => this.handleInput(event, 'name')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter author\"\r\n                                value={this.state.formdata.author}\r\n                                onChange={(event) => this.handleInput(event, 'author')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <textarea\r\n                                rows=\"20\"\r\n                                placeholder=\"Enter review\"\r\n                                value={this.state.formdata.review}\r\n                                onChange={(event) => this.handleInput(event, 'review')}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Enter pages\"\r\n                                value={this.state.formdata.pages}\r\n                                onChange={(event) => this.handleInput(event, 'pages')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <select value={this.state.formdata.rating}\r\n                                onChange={(event) => this.handleInput(event, 'rating')}\r\n                            >\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Price\"\r\n                                value={this.state.formdata.price}\r\n                                onChange={this.handleInputPassword}\r\n                                onChange={(event) => this.handleInput(event, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            <button type=\"submit\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                    {\r\n                        this.props.newBook && !isEmpty(this.props.newBook) ?\r\n                            <div className={`user_msg ${this.props.newBook.success ? 'show success' : 'show danger'}`}>\r\n                                {\r\n                                    this.props.newBook.success ?\r\n                                        (\r\n                                            <div>\r\n                                                <div>{this.props.newBook.message}</div>\r\n                                                <div>\r\n                                                    {this.showNewBook(this.props.newBook.bookId)}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        )\r\n                                        : <div>{this.props.newBook.message}</div>\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(state);\r\n    return { ...state.bookReducer }// newBook\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddBook);","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\editBook.js",["130"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getBook, updateBook, deleteBook, clearBook } from '../../actions';\r\nimport { isEmpty } from '../../hoc/Auxiliary/helper';\r\n\r\nclass EditBook extends Component {\r\n\r\n    state = {\r\n        formdata: {\r\n            _id: this.props.match.params.id,\r\n            name: '',\r\n            author: '',\r\n            review: '',\r\n            pages: '',\r\n            rating: '',\r\n            price: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(getBook(this.props.match.params.id));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearBook());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const book = nextProps.editBook;\r\n        console.log('componentWillReceiveProps=====>')\r\n        console.log(nextProps);\r\n        this.setState({\r\n            formdata: {\r\n                _id: book._id,\r\n                name: book.name,\r\n                author: book.author,\r\n                review: book.review,\r\n                pages: book.pages,\r\n                rating: book.rating,\r\n                price: book.price\r\n            }\r\n        });\r\n    }\r\n\r\n    // updateSelect = () => {\r\n    //     this.setState({\r\n    //         formdata: {\r\n    //             rating: this.props.updatedBook.book.rating\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    handleInput = (event, name) => {\r\n        const newFormData = { ...this.state.formdata };\r\n        newFormData[name] = event.target.value;\r\n        this.setState({\r\n            formdata: newFormData\r\n        })\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.dispatch(updateBook(this.state.formdata));\r\n    }\r\n\r\n    deleteBook = () => {\r\n        this.props.dispatch(deleteBook(this.props.match.params.id));\r\n    }\r\n\r\n    redirectPage = () => {\r\n        setTimeout(() => {\r\n            this.props.history.push('/user/user-reviews/');\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"form_box\">\r\n                    <form noValidate={true} onSubmit={this.submitForm} className=\"submitform\">\r\n                        <h2>Add Review</h2>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter name\"\r\n                                value={this.state.formdata.name}\r\n                                onChange={(event) => this.handleInput(event, 'name')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter author\"\r\n                                value={this.state.formdata.author}\r\n                                onChange={(event) => this.handleInput(event, 'author')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <textarea\r\n                                rows=\"20\"\r\n                                placeholder=\"Enter review\"\r\n                                value={this.state.formdata.review}\r\n                                onChange={(event) => this.handleInput(event, 'review')}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Enter pages\"\r\n                                value={this.state.formdata.pages}\r\n                                onChange={(event) => this.handleInput(event, 'pages')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <select value={this.state.formdata.rating}\r\n                                onChange={(event) => this.handleInput(event, 'rating')}\r\n                            >\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Price\"\r\n                                value={this.state.formdata.price}\r\n                                onChange={this.handleInputPassword}\r\n                                onChange={(event) => this.handleInput(event, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            <button type=\"submit\">Edit Book</button>\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            <button onClick={this.deleteBook} type=\"button\">Delete Book</button>\r\n                        </div>\r\n                    </form>\r\n                    {\r\n                        (this.props.updatedBook && !isEmpty(this.props.updatedBook)) || (this.props.deletedBook && !isEmpty(this.props.deletedBook)) ?\r\n                            <div className={`user_msg ${(this.props.updatedBook && this.props.updatedBook.success) || (this.props.deletedBook && this.props.deletedBook.success) ? 'show success' : 'show danger'}`}>\r\n                                {\r\n                                    this.props.updatedBook && this.props.updatedBook.success ?\r\n                                        (\r\n                                            <div>\r\n                                                <div>{this.props.updatedBook.message}</div>\r\n                                                <Link className=\"link\" to={`/books/${this.props.updatedBook.book._id}`}>\r\n                                                    Click here to see updated book\r\n                                                    </Link>\r\n                                            </div>\r\n\r\n                                        )\r\n                                        : this.props.deletedBook && this.props.deletedBook.success ?\r\n                                            (\r\n                                                <div>\r\n                                                    <div>{this.props.deletedBook.message}</div>\r\n                                                    {this.redirectPage()}\r\n                                                </div>\r\n                                            )\r\n                                            : this.props.updatedBook && !this.props.updatedBook.success ?\r\n                                                <div> {this.props.updatedBook.message}</div>\r\n                                                : this.props.deletedBook && !this.props.deletedBook.success ?\r\n                                                    <div> {this.props.deletedBook.message}</div>\r\n                                                    : null\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { ...state.bookReducer } // updatedBook //editBook //deletedBook\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditBook);","D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\userBook.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\userProfile.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\register.js",[],"D:\\Projects\\react-bookshelf\\client\\src\\components\\Admin\\logout.js",["131"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst logout = (props) => {\r\n    let request = axios.get('/api/logout')\r\n        .then(() => {\r\n            setTimeout(() => {\r\n                props.history.push('/login/');\r\n            }, 2000);\r\n        });\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box logout\">\r\n                Sorry to see you go :(\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logout;","D:\\Projects\\react-bookshelf\\client\\src\\containers\\Admin\\signup.js",["132"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userSignup, clearState } from '../../actions';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { isEmpty } from '../../hoc/Auxiliary/helper';\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        loading: true\r\n    }\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            this.setState({ loading: false });\r\n        }, 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearState());\r\n    }\r\n    handleInputEmail = (event) => {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n    handleInputPassword = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n    handleInputConfirmPassword = (event) => {\r\n        this.setState({ confirmPassword: event.target.value });\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ error: '' });\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        this.props.dispatch(userSignup(user))\r\n    }\r\n    redirect = () => {\r\n        setTimeout(() => {\r\n            this.props.history.push('/login/');\r\n        }, 2000);\r\n    }\r\n    render() {\r\n        console.log(\"PROPS====>\")\r\n        console.log(this.props);\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <Skeleton style={{ marginTop: 10 }} height={350} count={1} />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"form_box\">\r\n                    <form noValidate={true} onSubmit={this.submitForm} className=\"submitform\">\r\n                        <h2>Register New User</h2>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleInputEmail}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleInputPassword}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password again for confirmation\"\r\n                                value={this.state.confirmPassword}\r\n                                onChange={this.handleInputConfirmPassword}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            <button type=\"submit\">Signup</button>\r\n                        </div>\r\n                        <div className=\"form_element text-center\">\r\n                            If you have already signed up!\r\n                            <Link className=\"link link_signup\" to=\"/login/\">click here to login.</Link>\r\n                        </div>\r\n                    </form>\r\n                    {\r\n                        this.props.signup && !isEmpty(this.props.signup) ?\r\n                            <div className={`user_msg ${this.props.signup.success ? 'show success' : 'show danger'}`}>\r\n                                {\r\n                                    this.props.signup.success ?\r\n                                        (\r\n                                            <div>\r\n                                                <div>Your account has been successfully saved.</div>\r\n                                                <div>\r\n                                                    It is redirecting to login...\r\n                                                    {this.redirect()}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        )\r\n                                        : <div>{this.props.signup.message}</div>\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(\"STATE====>\")\r\n    console.log(state);\r\n    return { ...state.userReducer }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Signup);","D:\\Projects\\react-bookshelf\\client\\src\\hoc\\Auxiliary\\helper.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":1,"nodeType":"139","endLine":25,"endColumn":2},{"ruleId":"137","severity":1,"message":"138","line":1,"column":1,"nodeType":"139","endLine":22,"endColumn":2},{"ruleId":"133","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":45,"column":15,"nodeType":"144","messageId":"145","endLine":45,"endColumn":19},{"ruleId":"142","severity":1,"message":"146","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":4,"column":20,"nodeType":"144","messageId":"145","endLine":4,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":103,"column":33,"nodeType":"150","endLine":103,"endColumn":87},{"ruleId":"148","severity":1,"message":"149","line":133,"column":33,"nodeType":"150","endLine":133,"endColumn":87},{"ruleId":"142","severity":1,"message":"151","line":5,"column":9,"nodeType":"144","messageId":"145","endLine":5,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":5,"column":20,"nodeType":"144","messageId":"145","endLine":5,"endColumn":33},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["152"],["153"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Skeleton' is defined but never used.","'SkeletonTheme' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'request' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]